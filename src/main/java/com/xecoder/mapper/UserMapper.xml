<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xecoder.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xecoder.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="identity_cards" jdbcType="VARCHAR" property="identityCards" />
    <result column="cards_front" jdbcType="VARCHAR" property="cardsFront" />
    <result column="cards_back" jdbcType="VARCHAR" property="cardsBack" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, email, password, phone, realname, salt, status, username, org_id, 
    parent_id, address, identity_cards, cards_front, cards_back, bank, bank_account,
    bank_name,(select count(1) from security_user oo where oo.parent_id = nn.id) as nodes
  </sql>
  <select id="selectByExample" parameterType="com.xecoder.entity.UserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security_user nn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from security_user nn
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from security_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xecoder.entity.UserCriteria">
    delete from security_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xecoder.entity.User">
    insert into security_user (id, create_time, email, 
      password, phone, realname, 
      salt, status, username, 
      org_id, parent_id, address, 
      identity_cards, cards_front, cards_back, 
      bank, bank_account, bank_name
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{orgId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{identityCards,jdbcType=VARCHAR}, #{cardsFront,jdbcType=VARCHAR}, #{cardsBack,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xecoder.entity.User">
    insert into security_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="identityCards != null">
        identity_cards,
      </if>
      <if test="cardsFront != null">
        cards_front,
      </if>
      <if test="cardsBack != null">
        cards_back,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="identityCards != null">
        #{identityCards,jdbcType=VARCHAR},
      </if>
      <if test="cardsFront != null">
        #{cardsFront,jdbcType=VARCHAR},
      </if>
      <if test="cardsBack != null">
        #{cardsBack,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xecoder.entity.UserCriteria" resultType="java.lang.Integer">
    select count(*) from security_user nn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update security_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCards != null">
        identity_cards = #{record.identityCards,jdbcType=VARCHAR},
      </if>
      <if test="record.cardsFront != null">
        cards_front = #{record.cardsFront,jdbcType=VARCHAR},
      </if>
      <if test="record.cardsBack != null">
        cards_back = #{record.cardsBack,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update security_user
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      identity_cards = #{record.identityCards,jdbcType=VARCHAR},
      cards_front = #{record.cardsFront,jdbcType=VARCHAR},
      cards_back = #{record.cardsBack,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xecoder.entity.User">
    update security_user
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="identityCards != null">
        identity_cards = #{identityCards,jdbcType=VARCHAR},
      </if>
      <if test="cardsFront != null">
        cards_front = #{cardsFront,jdbcType=VARCHAR},
      </if>
      <if test="cardsBack != null">
        cards_back = #{cardsBack,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xecoder.entity.User">
    update security_user
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      identity_cards = #{identityCards,jdbcType=VARCHAR},
      cards_front = #{cardsFront,jdbcType=VARCHAR},
      cards_back = #{cardsBack,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>